// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING;
// Autogenerated by clientgenerator -r Recording -m R DO NOT EDIT

package api

import (
	"github.com/exotel/goapi/assets/types"
	"github.com/exotel/goapi/resources"
)

//RecordingService is the struct that defines the recording information and has fubnctions to perform recording level
type RecordingService struct {
	Client
}

//Get sets the action as types.READ
func (__receiver_RService *RecordingService) Get() *RecordingService {
	if len(__receiver_RService.ResourceID) == 0 {
		__receiver_RService.action = types.BULKREAD
		__receiver_RService.data = resources.RecordingFilter{}
		__receiver_RService.url = resources.RecordingURLS[types.BULKREAD]
	} else {
		__receiver_RService.data = struct{}{}
		__receiver_RService.url = resources.RecordingURLS[types.READ]
		__receiver_RService.action = types.READ
	}
	return __receiver_RService
}

//ID sets the id for the resource request
func (__receiver_RService *RecordingService) ID(id string) *RecordingService {
	__receiver_RService.ResourceID = id
	switch __receiver_RService.action {
	case types.BULKREAD:
		__receiver_RService.data = struct{}{}
		__receiver_RService.url = resources.RecordingURLS[types.READ]
		__receiver_RService.action = types.READ

	}
	return __receiver_RService
}

//Filter set the filter for read operation for read
func (__receiver_RService *RecordingService) Filter(filter resources.RecordingFilter) *RecordingService {
	__receiver_RService.data = filter
	return __receiver_RService
}

//Recording returns an instance of __receiver_RService
func (c *Client) Recording() *RecordingService {
	recordingService := RecordingService{Client: *c}
	recordingService.validActions = types.READ | types.BULKREAD | 0x00
	return &recordingService
}
