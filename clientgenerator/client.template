// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING;

// Autogenerated by clientgenerator -r {{.Resource}} -m {{if .Create}}C{{end}}{{if .Read}}R{{end}}{{if .Update}}U{{end}}{{if .Delete}}D{{end}} DO NOT EDIT

package api

import (
	"github.com/exotel/goapi/assets/types"
	"github.com/exotel/goapi/resources"
)

//{{.Resource}}Service is the struct that defines the {{.Resource | lower}} information and has fubnctions to perform {{.Resource | lower}} level
type {{.Resource}}Service struct {
	Client
}

{{if .Create}}//Create sets the action as create
func ({{.Resource | reciever }}Service *{{.Resource}}Service) Create() *{{.Resource}}Service {
	{{.Resource | reciever }}Service.action = types.CREATE
	{{.Resource | reciever }}Service.url = resources.{{.Resource}}URLS[types.CREATE]
	return {{.Resource | reciever }}Service
}
{{end}}
{{if .Update}}//Update sets the action as update
func ({{.Resource | reciever }}Service *{{.Resource}}Service) Update() *{{.Resource}}Service {
	{{.Resource | reciever }}Service.action = types.UPDATE
	{{.Resource | reciever }}Service.url = resources.{{.Resource}}URLS[types.UPDATE]
	return {{.Resource | reciever }}Service
}
{{end}}
{{if .Delete}}//Delete sets the action as types.DELETE
func ({{.Resource | reciever }}Service *{{.Resource}}Service) Delete() *{{.Resource}}Service {
	{{.Resource | reciever }}Service.action = types.DELETE
	{{.Resource | reciever }}Service.url = resources.{{.Resource}}URLS[types.DELETE]
	return {{.Resource | reciever }}Service
}
{{end}}
{{if .Read}}//Get sets the action as types.READ
func ({{.Resource | reciever }}Service *{{.Resource}}Service) Get() *{{.Resource}}Service {
	{{.Resource | reciever }}Service.action = types.BULKREAD
	{{.Resource | reciever }}Service.url = resources.{{.Resource}}URLS[types.BULKREAD]
	return {{.Resource | reciever }}Service
}
{{end}}

//ID sets the id for the resource request
func ({{.Resource | reciever }}Service *{{.Resource}}Service) ID(id string) *{{.Resource}}Service {
	{{.Resource | reciever }}Service.ResourceID = id
	switch {{.Resource | reciever }}Service.action {
	case types.BULKREAD:
	  {{.Resource | reciever }}Service.url = resources.{{.Resource}}URLS[types.READ]
		{{.Resource | reciever }}Service.action = types.READ

	}
	return {{.Resource | reciever }}Service
}

{{if .Read}}//Filter set the filter for read operation for read
func ({{.Resource | reciever }}Service *{{.Resource}}Service) Filter(filter resources.{{.Resource}}Filter) *{{.Resource}}Service {
	{{.Resource | reciever }}Service.data = filter
	return {{.Resource | reciever }}Service
}
{{end}}

{{if .Create}}//Details set the resource details for create resource requests
func ({{.Resource | reciever }}Service *{{.Resource}}Service) Details(details resources.{{.Resource}}Details) *{{.Resource}}Service {
	{{.Resource | reciever }}Service.data = details
	return {{.Resource | reciever }}Service
}
{{end}}
{{if .Update}}//UpdateDetails sets the details to be updated for the resource
func ({{.Resource | reciever }}Service *{{.Resource}}Service) UpdateDetails(details resources.{{.Resource}}UpdatableDetails) *{{.Resource}}Service {
	{{.Resource | reciever }}Service.data = details
	return {{.Resource | reciever }}Service
}
{{end}}

//{{.Resource}} returns an instance of {{.Resource | reciever }}Service
func (c *Client) {{.Resource}}() *{{.Resource}}Service {
	{{.Resource | lower }}Service := {{.Resource}}Service{Client: *c}
	{{.Resource | lower }}Service.validActions = {{if .Create}}types.CREATE | {{end}}{{if .Read}}types.READ | types.BULKREAD | {{end}}{{if .Update}} types.UPDATE |{{end}}{{if .Delete}} types.DELETE |{{end}} 0x00
	return &{{.Resource | lower }}Service
}
